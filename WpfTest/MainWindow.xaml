<Window x:Class="WpfTest.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=system"
        xmlns:local="clr-namespace:WpfTest"
        xmlns:w="clr-namespace:WpfTest"
        xmlns:auto="clr-namespace:FeserWard.Controls;assembly=Intellibox"
        xmlns:wpfauto="clr-namespace:WPFAutoCompleteBox.Controls;assembly=WPFAutoCompleteBox"
        xmlns:AC="clr-namespace:WPFAutoCompleteBox.Controls;assembly=WPFAutoCompleteBox"
        xmlns:dotNetKitControls="clr-namespace:DotNetKit.Windows.Controls;assembly=DotNetKit.Wpf.AutoCompleteComboBox"

        mc:Ignorable="d"
        Title="Reporter" Height="661.5" Width="1036"
        Background="#444444" d:DataContext="{d:DesignData }"
        Loaded="OnWindowLoaded">
    <Window.Resources>
        <RoutedUICommand x:Key="ClearNewDiagnosesCommand" Text="Clear User Diagnoses" />
        <RoutedUICommand x:Key="AddDiagnosisCommand" Text="Add Diagnosis" />
        <RoutedUICommand x:Key="SaveReportAsDiagnosisCommand" Text="Save as new Diagnosis" />



        <Style TargetType="Button">
            <Setter Property="Margin" Value="2" />
            <Setter Property="Background" Value="CornflowerBlue" />

            <Style.Triggers>

                <Trigger Property="IsFocused" Value="true" >
                    <Setter Property="Background" Value="LightSkyBlue"/>
                </Trigger>
            </Style.Triggers>

        </Style>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static w:Commands.PrintDiagnosisCommand}"
                        Executed="CommandBinding_PrintDiagnosisCommand" />
        <CommandBinding Command="{x:Static w:Commands.SaveAsNewDiagnosisCommand}"
                        CanExecute="CommandBinding_SaveReportAsDiagnosisCommand_CanExecute"
                        Executed="CommandBinding_SaveAsNewDiagnosisCommand" />
        <CommandBinding Command="{x:Static w:Commands.SaveAsVariantCommand}"
                        CanExecute="CommandBinding_SaveAsVariantCommand_CanExecute"
                        Executed="CommandBinding_SaveAsVariant_Executed" />
        <CommandBinding Command="{x:Static w:Commands.SaveOverExistingCommand}"
                        CanExecute="CommandBinding_SaveOverExistingCommand_CanExecute"
                        Executed="CommandBinding_SaveOverExisting_Executed" />
        <CommandBinding Command="{x:Static w:Commands.DeleteDiagnosisCommand}"
                        CanExecute="CommandBinding_DeleteDiagnosisCommand_CanExecute"
                        Executed="CommandBinding_DeleteDiagnosis_Executed" />
        <CommandBinding Command="{x:Static w:Commands.SearchBoxFocusCommand}"
                        CanExecute="CommandBinding_SearchBoxFocusCommand_CanExecute"
                        Executed="CommandBinding_SearchBoxFocusCommand_Executed" />





    </Window.CommandBindings>


    <Grid Margin="5,5,-8,10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="303*" />
            <ColumnDefinition Width="66*" />
            <ColumnDefinition Width="298*"/>
            <ColumnDefinition Width="364*" />
        </Grid.ColumnDefinitions>

        <StackPanel Margin="5,5,5.235,5.5" Orientation="Vertical">
            <!--#region Top Buttons-->
            <Button
                x:Name="Arlo"
                Command="{x:Static w:Commands.SaveAsNewDiagnosisCommand}"
                CommandTarget="{Binding ElementName=EditBox}"
                Content="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}" />

            <Button
                Command="{x:Static w:Commands.SaveAsVariantCommand}"
                Content="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}" />
            <Button
                Command="{x:Static w:Commands.SaveOverExistingCommand}"
                Content="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}" />
            <Button
                Command="{x:Static w:Commands.DeleteDiagnosisCommand}"
                Content="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}" />
            <Button
                Content="Sort A-Z" Click="SortAZButton_Click" />
            <Button
                Content="Sort by Use" Click="SortByUseButton_Click" />
            <Button
                Content="Filter to Diagnosis Box" Click="FilterToDiagnosisBoxButton_Click" />
            <Button
                Content="Clear Filter" Click="ClearFilterButton_Click" />
            <!--#endregion-->
            <!--#region SearchBox-->

            <dotNetKitControls:AutoCompleteComboBox
                Margin="5"
                SelectedValuePath="Id"
                TextSearch.TextPath="Name"
                ItemsSource="{Binding Path=DiagnosisViewSource.Source}"
                SelectedItem="{Binding SelectedItem}"
                SelectedValue="{Binding SelectedValue}"
                DisplayMemberPath="Name"/>


            <wpfauto:CompletableTextBox 
                Name="WpfAutoCompBox" 
                Background="AntiqueWhite"
                Margin="5"/>




                <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20px" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="20px" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10px" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right">Selected Value:</TextBlock>
                <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding ElementName=autoBox, Path=SelectedValue}" />

                <TextBlock Grid.Row="2" Grid.Column="0" HorizontalAlignment="Right">Selected Item:</TextBlock>
                <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding ElementName=autoBox, Path=SelectedItem}" />

                <TextBlock Grid.Row="3" Grid.Column="0" HorizontalAlignment="Right">Highlighted Value:</TextBlock>
                <TextBlock Grid.Row="3" Grid.Column="2" Text="{Binding ElementName=autoBox, Path=DisplayTextFromHighlightedItem}" />

                <TextBlock Grid.Row="5" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,6,0">Search:</TextBlock>
                <auto:Intellibox 
                    Grid.Row="5" Grid.Column="2"
                    Width="200" Name="autoBox" SelectAllOnFocus="True" HorizontalAlignment="Left"
                    DisplayedValueBinding="{Binding Name}"
                    SelectedValueBinding="{Binding Name}"
                    DataProvider="{Binding Path=SearchAutoCompleteProvider}"
                    SelectedItem="{Binding SelectedItem}"
                    SelectedValue="{Binding SelectedValue}"
                />
            </Grid>








            <Label Target="{Binding ElementName=Intellibox}" Margin="0 8 0 0" Style="{DynamicResource IntelliBoxStyle}">_Search</Label>
            <auto:Intellibox 
                             x:Name="Intellibox"
                             Margin="8"
                             SelectAllOnFocus="True"
                             ExplicitlyIncludeColumns="True"
                             ResultsMaxWidth="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
                             ResultsMinHeight="20"
                             ResultsMaxHeight="300"
                             HideColumnHeaders="True"
                             DisplayedValueBinding="{Binding Name}"
                             SelectedValueBinding="{Binding Name}"
                             DataProvider="{Binding Path=SearchAutoCompleteProvider}"
                             Height="26"
                             VerticalAlignment="Top">

            </auto:Intellibox>



            <Label Target="{Binding ElementName=SearchBox}" Margin="0 8 0 0">_CSearch</Label>
            <!--It's using the toString of Diagnosis objects for name display:'-->
            <ComboBox x:Name="SearchBox"
                      SelectionChanged="SearchBox_OnSelectionChanged"
                      TextBoxBase.TextChanged="SearchBox_TextChanged"
                      KeyDown="SearchBox_KeyDown"
                      PreviewKeyDown="SearchBox_PreviewKeyDown"
                      PreviewTextInput="SearchBox_TextInput"
                      IsEditable="True"
                      IsSynchronizedWithCurrentItem="True"
                      ItemsSource="{Binding Path=DiagnosisViewSource.Source}"
                      DisplayMemberPath="Name"
                      SelectedValuePath="Name"
                      Background="#FFFBFFFB"
                      Margin="0 5 0 5"
                      Padding="2"
                      Text="Search Diagnoses" Foreground="#FF050EC3" Style="{DynamicResource SearchBoxStyle}">
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Background" Value="Lightgreen" />
                        <Setter Property="BorderBrush" Value="LightSeaGreen" />
                        <EventSetter Event="ComboBoxItem.PreviewMouseDown"
                                     Handler="cmbItem_PreviewMouseDown" />
                    </Style>
                </ComboBox.ItemContainerStyle>
            </ComboBox>
            <!--#endregion Searchbox-->

            <Label Margin="0 10 0 0" Content="Diagnoses:" />
            <ItemsControl ItemsSource="{Binding Path=DiagnosisViewSource.Source}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Name="DiagnosisButton"
                                Content="{Binding Name}"

                                Tag="{Binding}"
                                Command="{x:Static w:Commands.PrintDiagnosisCommand}" />
                        <!-- CommandParameter="{Binding ElementName=DiagnosisButton}"/> -->
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="3" Rows="5" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </StackPanel>
        <StackPanel VerticalAlignment="Bottom" Margin="0,0,0.235,-0.5">
            <TextBlock Margin="0 9 0 8" Text="Codes" />
            <TextBox x:Name="GreenTextBox"
                     Background="#AACCAA"
                     Padding="2"
                     Text="Benign Uterus    Variation 7    Code 247676.34" />
            <TextBlock Margin="0 9 0 8" Text="Diagnosis:" />
            <TextBox x:Name="NameTextBox"
                     Background="#AADDEE"
                     Padding="2"
                     Text="" />
            <TextBlock Margin="0 9 0 8" Text="Current Diagnosis in View:" />
            <TextBox x:Name="CurrentDiagnosisTextBox"
                     Background="#FF76DDFF"
                     Padding="2"
                     Text="{Binding Path=DiagnosisViewSource.Source.CurrentItem, Mode=OneWay}" />
        </StackPanel>


        <DockPanel Margin="3.765,5,8.118,5.5" Name="PreviewContainer" Grid.Column="1" Grid.ColumnSpan="2">
            <TextBox DockPanel.Dock="Top"
                     IsReadOnly="True"
                     Background="#FFAFEABD"
                     Padding="2"
                     Text="Benign Uterus    Variation 7    Code 247676.34" />
            <StatusBar DockPanel.Dock="Bottom" />

            <!--PreviewTextBox-->
            <TextBox
                Grid.Row="1"
                HorizontalAlignment="Stretch"
                Width="{Binding ElementName=Container,Path=ActualWidth}"
                VerticalScrollBarVisibility="Auto"
                Name="PreviewBox"
                Margin="0,0,0,0"
                Padding="5"
                TextChanged="PreviewBox_OnTextChangedBox_TextChanged"
                Block.LineHeight="8"
                TextWrapping="Wrap"
                AcceptsReturn="True"
                SpellCheck.IsEnabled="True"
                ScrollViewer.CanContentScroll="True"
                AcceptsTab="False"
                Background="#FF302D2D"
                Foreground="#FFA8A6A6" FontSize="16">
                <SpellCheck.CustomDictionaries>
                    <sys:Uri>pack://application:,,,/CustomSpellCheckDictionary.lex</sys:Uri>
                </SpellCheck.CustomDictionaries>
            </TextBox>
        </DockPanel>
        <DockPanel Margin="298,5,14.001,5.5" Name="EditContainer" Grid.Column="2" Grid.ColumnSpan="2">
            <TextBox DockPanel.Dock="Top"
                     IsReadOnly="True"
                     Background="#AAAACC"
                     Padding="2"
                     Text="---- Report ----" />
            <StatusBar DockPanel.Dock="Bottom" />

            <!--EditTextBox-->
            <TextBox
                Grid.Row="2"
                HorizontalAlignment="Stretch"
                Width="{Binding ElementName=Container,Path=ActualWidth}"
                VerticalScrollBarVisibility="Auto"
                Name="EditBox"
                Margin="0,0,0,0"
                Padding="5"
                TextChanged="EditBox_TextChanged"
                Block.LineHeight="8"
                TextWrapping="Wrap"
                AcceptsReturn="True"
                SpellCheck.IsEnabled="True"
                ScrollViewer.CanContentScroll="True"
                AcceptsTab="False"
                Background="#FF1F1F1F"
                Foreground="#EEEEEE" FontSize="16">
                <SpellCheck.CustomDictionaries>
                    <sys:Uri>pack://application:,,,/CustomSpellCheckDictionary.lex</sys:Uri>
                </SpellCheck.CustomDictionaries>
            </TextBox>
        </DockPanel>
    </Grid>
</Window>


			Do need XMLreader? - currently using TextReader/Writer

			Next need to try binding buttons with a TextAdd Command.
			Need more understanding of CommandParameter and [CallerMemberName]
			It's between this or just continuing with the button.tag passing info to the method.

			Now need to add spectype or speciality tags to Diagnosis objects.
			Then filter view of buttons by those tags (hardcode a tag to begin with )

			Then need to separate object of single diagnosis with whole text-edited report.
			Should be able to edit diagnosis test and offer save over or save as varient.
			Then add it to main report text.
			Textbox should switch views by binding to a view controler object which has current display text.

			Then need to develop search-as-type autocomplete combobox filtered by tag and perhaps ordered by usage frequency (later)
			
			Eventually convert text to flow document, with different coloured text to show changes/diffs and option of formatting/images etc.

			Develop command system for button and keyboard shortcut binding.  UIRoutedCommand seems to be the one.
			Need Save-over, save-as-varient, Save-as-new, AddReportText, Undo/Redo (could just track state of DiagnosisText and ReportText objects, and XML persistence objects)
			TextBox has good native undo/redo.  Need separate undo/redo system for save/clear diagnoses and add to dictionary.

			Additional user dictionary (compiled or not?) with add to dictionary and export function.

MenuItem item = new MenuItem();
item.Header = "Add to Dictionary";
item.Click += new RoutedEventHandler(AddDict_Click);
item.Command = EditingCommands.IgnoreSpellingError;
item.CommandParameter = currentText;
item.CommandTarget = txtBox;

Just need the logic to open the Dictionary file and write the element in CommandParameter to the fil

			Need to experiment with Collectionviews next.  Try a sorted collectionview of DiagnosisCollection for ease with dropdown items.
			Then filter it for speciality tags.
			Speciality should have collection of spectypes.
			Speciality and spectypes should be searchable from box, but trigger items filter and button regenerate rather than report entry.
			Different colours for reports and spectypes etc.
			Different colours for reports matching spectypes, or speciality, or ben/mal, or custom.  not sure yet.

			Then some serious refactoring is needed.
			Extract mess of methods into sensible controler classes and only keep initialisation in mainwindow
			Rationalize commands
			Define Regions

			SaveEdited
			SaveAsNew
			SaveAsVariant

			Undo saves just with renaming overwritten to backup_timedate or whatever.
			Purge backups daily, keeping just one representative per day (end of day) from last 30 days, one per month before that.
			Backup XML to Firebase?

			Keep stack of spellcheck dictionary word add/removes for undo.
			Have right-click forget word in text editor.

			Extend Diagnosis class to include:
				spectype (list)
				times used
				list of variant Diagnoses - ?than inherit from it?  Base frequency?
				bottomline
				codes
				notes
				metadatadictionary?
				category - diagnosis, snippet, dataset, other

			?Diff relative to most used variant?

			?Snippet category - e.g. negatives.  Immuno shows etc.  Fungal stain negative.
			?code snippets inline text editing?  Could track textbox text and when keyword recognized, allow double-tab expansion.
			Code snippet editor
			- At first, just include from SearchBox.

			Dataset reports - will likely need own custom windows.  Can shortcut quite a way with fine-grained search selection.

			Preview window - for previewing report text and editing and saving - and for preview dataset answers.

			Datasets need to be extensions.  Find out how to do that.  New classes that implement a dataset interface I guess.
			Each should start as barebones form with fields.
			Then add validation logic.
			Then do calculations.
			Then perhaps do UI or wizard input.
			Could just tab through form in best order.
			Needs a COSD XML output module.

			Then need a LIM input module.
			Possible command line trigger e.g. from Powerterm script.
			Picks up demog, specimen details including macro.

			Then need a report output module
			Have a OnReportCompleted event for stuff to subscribe to.
			Save to XML internally for backup (encrypt and to cloud)
			Output to pdf or text or whatever (with format config)
			Output to file for LIMS pickup or sendkeys to LIMS.

			Form scan module?

			Add safety features checking report.  Highlight certain words like:  grade, margin, positive, negative, numbers.  Missing "no".

			Need to handle small logic in non-dataset reports, e.g. for margin comments, immunoresults
			Maybe also use a preview window smart form.

			Query my an old report database.

				

